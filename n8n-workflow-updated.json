{
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "weather-chat",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -1120,
        32
      ],
      "id": "4c498e8a-1360-4cd2-bc7d-c87398b6fdcf",
      "name": "Webhook",
      "webhookId": "89657898-69ab-41e9-97cf-0e5a2e3eb2b6"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash-lite-preview-06-17",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash-lite-preview-06-17"
        },
        "messages": {
          "values": [
            {
              "content": "You are a JSON extractor for weather queries.  \nWhen given a user's question about weather, output only a JSON object with exactly these keys:\n  • city (string) – the city name  \n  • weather (string, optional) – the phrase \"weather\" for current weather\n  • time (string, optional) – words like \"today\", \"tomorrow\", \"latest\", \"now\" or other time expressions return time format with date \n  • greeting (string, optional) - greeting the user back if they greet.\n  • forecast (boolean, optional) - Set to true when user asks for weather prediction, forecast, or future weather conditions\n\nDo not output any extra text, markdown, or explanation—only the JSON.\n\nYour output must be a JSON object with those properties:\n{\n  \"city\" : this is recommended but optional when object greeting is used \n  \"weather\" : this is optional\n  \"time\" : this is optional \n  \"greeting\" : this is optional\n  \"forecast\" : this is optional, must be true when user asks for forecast or future weather\n}\n\nREALLY IMPORTANT: When users ask about future weather, rain forecasts, or predictions, you MUST set forecast to true!\n\nexample: \nuser input: \"can you get todays mumbai weather report\"\nexplanation: todays weather report means the exact report of now \nOutput:\n{\n  \"city\" : \"mumbai\",\n  \"weather\" : \"weather report\",\n  \"time\" : \"today\"\n}\n\nexample: \nuser input: \"what is the latest weather report of mumbai\"\nOutput:\n{\n  \"city\" : \"mumbai\",\n  \"weather\" : \"weather report\",\n  \"time\" : \"now\"\n}\n\nexample: \nuser input: \"hi\"\nouput:\n{\n  \"greeting\": \"hi, can i help you with weather report\"\n}\n\nexample: \nuser input: \"will it rain now in hyderabad\"\nOutput:\n{\n  \"city\" : \"hyderabad\",\n  \"forecast\" : true,\n  \"time\" : \"now\"\n}\n\nexample: \nuser input: \"what's the weather forecast for delhi tomorrow?\"\nOutput:\n{\n  \"city\" : \"delhi\",\n  \"forecast\" : true,\n  \"time\" : \"tomorrow\"\n}\n\nexample:\nuser input: \"what will the weather be like in mumbai for the next 5 days?\"\nOutput:\n{\n  \"city\": \"mumbai\",\n  \"forecast\": true\n}",
              "role": "model"
            },
            {
              "content": "= {{ $json.body.message }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -928,
        32
      ],
      "id": "349e2ab4-fa2f-4434-8c59-71737213cdd5",
      "name": "Message a model",
      "credentials": {
        "googlePalmApi": {
          "id": "3QfRg4dKCoPCWOHn",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.body.formatted_response }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        208,
        -64
      ],
      "id": "15d77a0c-d1e0-4524-a26d-7228ff6cb427",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.content.parts[0].text }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -608,
        32
      ],
      "id": "76cf3087-5299-4e20-bec6-66ed2a31174c",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://mcp-server:3001/tools/execute",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "parameters.city",
              "value": "={{ $json.city }}"
            },
            {
              "name": "=weather",
              "value": "={{ $json.weather }}"
            },
            {
              "name": "=parameters.time",
              "value": "={{ $json.time }}"
            },
            {
              "name": "tool_name",
              "value": "={{ $json.forecast ? 'get_forecast' : 'get_weather' }}"
            },
            {
              "name": "greeting",
              "value": "={{ $json.greeting }}"
            },
            {
              "name": "forecast",
              "value": "={{ $json.forecast }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -160,
        -64
      ],
      "id": "8cffcb22-21e5-47f5-9e52-ea7dc7b03b11",
      "name": "Call MCP Weather"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6953a685-e10c-4e95-927f-b5ba40584b34",
              "name": "body.formatted_response",
              "value": "={{ $json.body.formatted_response }}",
              "type": "string"
            }
          ]
        },
        "options": {
          "ignoreConversionErrors": true
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        32,
        -64
      ],
      "id": "b6228971-b7e4-442a-bb4a-b02f80349bb0",
      "name": "Extract Reply"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.city }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "d4319f87-5dfb-4781-8149-3570465dbecb"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c51de634-1ed1-4478-bc79-3c1f76ee0c2e",
                    "leftValue": "={{ $json.greeting }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -416,
        32
      ],
      "id": "f52037bf-e406-4cdc-9344-875543c36048",
      "name": "Switch"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.greeting }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -144,
        160
      ],
      "id": "79d38dcf-11f3-4731-b1f3-cb443108988c",
      "name": "Respond to Webhook1"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call MCP Weather": {
      "main": [
        [
          {
            "node": "Extract Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Reply": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Call MCP Weather",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "fa30a3de9f24f296baca547d332b215e27b6968f92d09824920a5698fb2b8053"
  }
}
