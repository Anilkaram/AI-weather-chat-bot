version: '3.8'

services:
  # n8n Automation Platform
  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    container_name: n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=developement
      - N8N_SECURE_COOKIE=false
      - WEBHOOK_URL=http://localhost:5678
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - mcp-server
    networks:
      - weather-network

  # Your MCP Weather Server
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: mcp-weather-server
    ports:
      - "3001:3001"
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - TIMEZONE=${TIMEZONE:-Asia/Kolkata}
      - TZ=${TIMEZONE:-Asia/Kolkata}
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - weather-network

  # Simple Web Frontend
  frontend:
    image: nginx:alpine
    container_name: weather-frontend
    ports:
      - "1111:80"
    volumes:
      - .\frontend:/usr/share/nginx/html
    depends_on:
      - n8n
    networks:
      - weather-network

  # prometheus:
  #   image: prom/prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - weather-network
  #     - monitoring 
  #   depends_on:
  #     - mcp-server

  # grafana:
  #   image: grafana/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - monitoring
  #     - weather-network

  # cadvisor:
  #   image: google/cadvisor:latest
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - //var/run/docker.sock:/var/run/docker.sock:ro
  #     - //sys:/sys:ro
  #     - //var/lib/docker:/var/lib/docker:ro
  #   networks:
  #     - monitoring
  #     - weather-network
  #   depends_on:
  #     - grafana
    
volumes:
  n8n_data:
  # prometheus_data:
  # grafana_data:
  localtime:
    external: true

networks:
  weather-network:
    driver: bridge
  # monitoring:
  #   driver: bridge
